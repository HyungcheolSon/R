{colors<-c(colors,"yellow")}
else {colors<-c(colors,"green")}
}
barplot(peach,main="Peach Saels QTY",names.arg = c("MON","TUE","WED","THU","FRI"),col=colors)
heigth<-c(182,175,167,172,163,178,181,166,159,155)
heigth<-c(182,175,167,172,163,178,181,166,159,155)
hist(height,main="histogram of height")
heigth<-c(182,175,167,172,163,178,181,166,159,155)
hist(height,main="histogram of height")
hist(height,main="histogram of height")
height<-c(182,175,167,172,163,178,181,166,159,155)
hist(height,main="histogram of height")
par(mfrow=c(1,1),oma=c(0.5,0.5,0.1,0.1))
p1<-c(10,20,30,40)
pie(p1,radius=1)
pie(p1,radius=1,init.angle=90)
pie(p1,radius=1,init.angle=90,col=rainbow(lenght(p1)),
label=c("Week 1","Week 2","Week 3","Week 4"))
pie(p1,radius=1,init.angle=90,col=rainbow(length(p1)),
label=c("Week 1","Week 2","Week 3","Week 4"))
pie(p1,radius=1,init.angle = 90,col=rainbow(length(p1)),
label=lab)
pct<-round(p1/sum(p1)*100,1)
lab<-paste(pct,"%")
pie(p1,radius=1,init.angle = 90,col=rainbow(length(p1)),
label=lab)
legend(1,1.1c("Week 1","Week 2", "Week 3", "Week4"), cex=0.5, fill=rainbow(length(p1)))
legend(1,1.1,c("Week 1","Week 2", "Week 3", "Week4"), cex=0.5, fill=rainbow(length(p1)))
pie(p1,radius=1,init.angle=90,col=rainbow(length(p1)),
label=c("Week 1","Week 2","Week 3","Week 4"))
pct<-round(p1/sum(p1)*100,1)
lab<-paste(pct,"%")
pie(p1,radius=1,init.angle = 90,col=rainbow(length(p1)),
label=lab)
legend(1,1.1,c("Week 1","Week 2", "Week 3", "Week4"), cex=0.5, fill=rainbow(length(p1)))
legend(1,1.1,c("Week 1","Week 2", "Week 3", "Week 4"), cex=0.5, fill=rainbow(length(p1)))
legend(1,1.1,c("Week 1","Week 2", "Week 3", "Week 4"), cex=0.5, fill=rainbow(length(p1)))
install.packages("plotrix")
library(plotrix)
p1<-c(10,20,30,40,50)
f_day<-round(p1/sum(p1)*100,1)
pie3D(p1,main="3D Pie Chart", col = rainbow(length(p1)),
cex=0.5,labels=f_label,explode=0.05)
f_label<-paste(f_day,"%")
pie3D(p1,main="3D Pie Chart", col=rainbow(length(p1)),
cex=0.5,labels=f_label,explode=0.05)
legend(0.5,1,c("MON","TUE","WED","THU","FRI"),cex=0.6,fifill = rainbow(length(p1)))
legend(0.5,1,c("MON","TUE","WED","THU","FRI"),cex=0.6,fill = rainbow(length(p1)))
v1<-c(10,12,15,11,20)
v2<-c(5,7,15,8,9)
v3<-c(11,20,15,18,13)
boxplot(v1,v2,v3)
boxplot(v1,v2,v3,col=c("blue","yellow","pink"),names=c("Blue","Yellow","Pink"),horizontal=T)
boxplot(v1,v2,v3)
boxplot(v1,v2,v3,col=c("blue","yellow","pink"),names=c("Blue","Yellow","Pink"),horizontal)
boxplot(v1,v2,v3,col=c("blue","yellow","pink"),names=c("Blue","Yellow","Pink"),horizontal=T)
install.packages("igraph")
library(igraph)
g1<- graph(1,2,2,3,2,4,1,4,5,5,3,6)
g1<- graph(1,2 ,2,3, 2,4, 1,4, 5,5, 3,6)
g1<- graph(c(1,2 ,2,3, 2,4, 1,4, 5,5, 3,6))
plot(g1)
str(g1)
savePlot("network_1.png",type="png")
savePlot("network_1.png",type="png")
name<-c('서진수 대표이사','일지매 부장','김유신 과장','손흥민 대리','노정호 대리','이순신 부장','유관순 과장','신사임당 대리','강감찬 부장','광개토 과장','정몽주 대리')
pemp<-c('서진수 대표이사','서진수 대표이사','일지매 부장','김유신 과장','김유신 과장','서진수 대표이사','이순신 부장','유관순 과장','서진수 대표이사','강감찬 부장','광개토 과장')
emp<-data.frame(이름=name,상사이름=pemp)
emp
g<-graph.data.frame(emp,directed = T)
plot(g,layout=layout.fruchterman.reingold,vertext.size=8,edge.arrow.size=0.5)
str(g)
savePlot("network_2.png",type="png")
plot(g3,layout=layout.fruchterman.reingold,vertext.size=8, edge.arrow.size=0.5, vertext.label=NA)
plot(g3,layout=layout.fruchterman.reingold,vertex.size=8, edge.arrow.size=0.5, vertext.label=NA)
plot(g3,layout=layout.fruchterman.reingold,vertex.size=8, edge.arrow.size=0.5, vertex.label=NA)
g3<- graph.data.frame(emp,directed = F)
plot(g3,layout=layout.fruchterman.reingold,vertex.size=8, edge.arrow.size=0.5, vertex.label=NA)
plot(g,layout=layout.fruchterman.reingold,vertext.size=8,edge.arrow.size=0.5)
png("graph/network_2.png", width = 600, height=600)
dev.off()
plot(g,layout=layout.fruchterman.reingold,vertext.size=8,edge.arrow.size=0.5)
g<-graph.data.frame(emp,directed = T)
plot(g,layout=layout.fruchterman.reingold,vertext.size=8,edge.arrow.size=0.5)
str(g)
png("graph/network_2.png", width = 600, height=600)
dev.off()
g3<- graph.data.frame(emp,directed = F)
plot(g3,layout=layout.fruchterman.reingold,vertex.size=8, edge.arrow.size=0.5, vertex.label=NA)
install.packages("devtools")
library(devtools)
install_github("christophergandrud/d3Network")
library(RCurl)
library(RCurl)
library(d3Network)
name <- c('Angela Bassett','Jessica Lange','Winona Ryder','Michelle Pfeiffer',
+ 'Whoopi Goldberg','Emma Thompson','Julia Roberts','Sharon Stone','Meryl Streep',
+ 'Susan Sarandon','Nicole Kidman')
pemp <- c('Angela Bassett','Angela Bassett','Jessica Lange','Winona Ryder','Winona Ryder',
+            'Angela Bassett','Emma Thompson', 'Julia Roberts','Angela Bassett',
+            'Meryl Streep','Susan Sarandon')
emp <- data.frame(이름=name,상사이름=pemp)
d3SimpleNetwork(emp,width=600,height=600,file="c:\\r_temp\\d3.html")
png("graph/network_2.png", width = 600, height=600)
plot(g,layout=layout.fruchterman.reingold,vertext.size=8,edge.arrow.size=0.5)
str(g)
png("graph/network_2.png", width = 600, height=600)
dev.off()
name <- c('Angela Bassett','Jessica Lange','Winona Ryder','Michelle Pfeiffer',
+ 'Whoopi Goldberg','Emma Thompson','Julia Roberts','Sharon Stone','Meryl Streep',
+ 'Susan Sarandon','Nicole Kidman')
name <- c('Angela Bassett','Jessica Lange','Winona Ryder','Michelle Pfeiffer',
'Whoopi Goldberg','Emma Thompson','Julia Roberts','Sharon Stone','Meryl Streep',
'Susan Sarandon','Nicole Kidman')
pemp <- c('Angela Bassett','Angela Bassett','Jessica Lange','Winona Ryder','Winona Ryder',
'Angela Bassett','Emma Thompson', 'Julia Roberts','Angela Bassett',
'Meryl Streep','Susan Sarandon')
emp <- data.frame(이름=name,상사이름=pemp)
d3SimpleNetwork(emp,width=600,height=600,file="D:/workspace/R_Data_Analysis/Part4")
emp <- data.frame(이름=name,상사이름=pemp)
d3SimpleNetwork(emp,width=600,height=600,file="D:/workspace/R_Data_Analysis/Part4")
d3SimpleNetwork(emp,width=600,height=600,file="grahp/d3.html")
d3SimpleNetwork(emp,width=600,height=600,file="graph/d3.html")
emp <- data.frame(이름=name,상사이름=pemp)
d3SimpleNetwork(emp,width=600,height=600,file="graph/d3.html")
g <- read.csv("군집분석.csv",head=T)
g <- read.csv("군집분석.csv",head=T)
library(RCurl)
g <- read.csv("군집분석.csv",head=T)
graph <- data.frame(학생=g$학생,교수=g$교수)
g<-graph.data.frame(graph,directed=T)
plot(g,layout=layout.fruchterman.reingold,vertex.size=2,edge.arrow.size=0.5,
,vertex.color="green",vertex.label=NA)
g <- read.csv("군집분석.csv",head=T)
g <- read.csv("군집분석.csv",head=T)
g< read.csv("군집분석.csv",head=T)
plot(g,layout=layout.fruchterman.reingold,vertex.size=2,edge.arrow.size=0.5,vertex.color="green",vertex.label=NA)
g< read.csv("군집분석.csv",head=T)
graph< data.frame(학생=g$학생,교수=g$교수)
g<-graph.data.frame(graph,directed=T)
plot(g,layout=layout.fruchterman.reingold,vertex.size=2,edge.arrow.size=0.5,vertex.color="green",vertex.label=NA)
g<-read.csv("군집분석.csv",head=T)
g<-read.csv("군집분석.csv",head=T)
getwd()
g<-read.csv("군집분석.csv",head=T)
graph< data.frame(학생=g$학생,교수=g$교수)
graph<-data.frame(학생=g$학생,교수=g$교수)
g<-graph.data.frame(graph,directed=T)
plot(g,layout=layout.fruchterman.reingold,vertex.size=2,edge.arrow.size=0.5,vertex.color="green",vertex.label=NA)
g<-read.csv("군집분석.csv",head=T)
graph<-data.frame(학생=g$학생,교수=g$교수)
g<-graph.data.frame(graph,directed=T)
plot(g,layout=layout.kamada.kawai,vertex.size=2,edge.arrow.size=0.5,vertex.label=NA)
g<-read.csv("군집분석.csv",head=T)
graph<-data.frame(학생=g$학생,교수=g$교수)
g<-graph.data.frame(graph.directed=T)
g
g<-graph.data.frame(graph,directed=T)
g
v(g)$name
V(g)$name
gubun1<-V(g)$name
gubun1
gubun<-str_sub(gubun1,start=1,end=1)
gubun<-str_sub(gubun1,start=1,end=1)
gubun
gubun<-str_sub(gubun1,start=1,end=1)
library(stringr)
gubun<-str_sub(gubun1,start=1,end=1)
gubun
colors<- c()
for (i in 1:ength(gubun)){
if (gubun[i]=='s'){
colors<-c(colors,"red")}
else {
colors<-c(colors,"green")}
}
for (i in 1:length(gubun)){
if (gubun[i]=='s'){
colors<-c(colors,"red")}
else {
colors<-c(colors,"green")}
}
for(i in 1:length(gubun)){
if(gubun[i]=='S'){
siezes<-c(sizes,2)}
else {
sizes<-c(sizes,6)}
}
plot(g,layout=layout.fruchterman.reingold,vertex.size=sizes=siezes,edge.arrow.size=0.5,,vertex.color=colors)
plot(g,layout=layout.fruchterman.reingold,vertex.size=sizes,edge.arrow.size=0.5,,vertex.color=colors)
plot(g,layout=layout.fruchterman.reingold,vertex.size=sizes,edge.arrow.size=0.5,,vertex.color=colors)
plot(g,layout=layout.fruchterman.reingold,vertex.size=sizes,edge.arrow.size=0.5,vertex.color=colors)
plot(g,layout=layout.fruchterman.reingold,vertex.size=sizes,edge.arrow.size=0.5,,vertex.color=colors)
plot(g,layout=layout.fruchterman.reingold,vertex.size=sizes,edge.arrow.size=0.5,vertex.color=colors)
plot(g,layout=layout.fruchterman.reingold,vertex.size=sizes,edge.arrow.size=0.5,,vertex.color=colors)
plot(g,layout=layout.fruchterman.reingold,vertex.size=sizes,edge.arrow.size=0.5,vertex.color=colors)
plot(g,layout=layout.fruchterman.reingold,vertex.size=sizes,edge.arrow.size=0.5,vertex.color=colors)
savePlot("군집_색상크기조절_1.png",type="png")
plot(g,layout=layout.fruchterman.reingold,vertex.size=sizes,edge.arrow.size=0.5,vertex.label=NA)
plot(g,layout=layout.fruchterman.reingold,vertex.size=sizes,edge.arrow.size=0.5,vertex.color=colors)
plot(g,layout=layout.fruchterman.reingold,vertex.size=sizes,edge.arrow.size=0.5,,vertex.color=colors)
sizes<-c()
for(i in 1:length(gubun)){
if(gubun[i]=='S'){
siezes<-c(sizes,2)}
else {
sizes<-c(sizes,6)}
}
plot(g,layout=layout.fruchterman.reingold,vertex.size=sizes,edge.arrow.size=0.5,,vertex.color=colors)
plot(g,layout=layout.fruchterman.reingold,vertex.size=sizes,edge.arrow.size=0.5,,vertex.color=colors,vertex.label=NA)
sizes<-c()
for(i in 1:length(gubun)){
if(gubun[i]=='S'){
siezes<-c(sizes,2)}
else {
sizes<-c(sizes,6)}
}
plot(g,layout=layout.fruchterman.reingold,vertex.size=sizes,edge.arrow.size=0.5,,vertex.color=colors,vertex.label=NA)
plot(g,layout=layout.fruchterman.reingold,vertex.size=sizes,edge.arrow.size=0,,vertex.color=colors,vertex.label=NA)
sizes<-c()
for(i in 1:length(gubun)){
if(gubun[i]=='S'){
siezes<-c(sizes,2)}
else {
sizes<-c(sizes,6)}
}
plot(g,layout=layout.fruchterman.reingold,vertex.size=sizes,edge.arrow.size=0.5,,vertex.color=colors)
plot(g,layout=layout.fruchterman.reingold,vertex.size=sizes,edge.arrow.size=0,,vertex.color=colors,vertex.label=NA)
plot(g,layout=layout.kamada.kawai,vertex.size=sizes,edge.arrow.size=0,,vertex.color=colors,vertex.label=NA)
virus1<-read.csv("메르스전염현황.csv",header=T)
d3SimpleNetwork(virus1,width=600,height=600,file="D:/workspace/R_Data_Analysis/Part4")
virus1<-read.csv("메르스전염현황.csv",header=T)
d3SimpleNetwork(virus1,width=600,height=600,file="D:/workspace/R_Data_Analysis/Part4")
> virus1 <- read.csv("메르스전염현황.csv",header=T)
virus1 <- read.csv("메르스전염현황.csv",header=T)
d3SimpleNetwork(virus1,width=600,height=600,file="D:\workspace\R_Data_Analysis\Part4")
d3SimpleNetwork(virus1,width=600,height=600,file="D:/workspace/R_Data_Analysis/Part4")
virus1 <- read.csv("메르스전염현황.csv",header=T)
d3SimpleNetwork(virus1,width=600,height=600,file="D:/workspace/R_Data_Analysis/Part4")
library(d3Network)
virus1 <- read.csv("메르스전염현황.csv",header=T)
d3SimpleNetwork(virus1,width=600,height=600,file="D:/workspace/R_Data_Analysis/Part4")
install.packages("treemap")
library(treemap)
setwd("D:/workspace/R_Data_Analysis/Part4")
total<-read.csv("학생시험결과_전체점수.csv",header=T,sep=",")
total<-read.csv("학생시험결과_전체점수.csv",header=T,sep=",")
total
treemap(tatal,vSize="점수",index=c("점수","이름"))
treemap(total,vSize="점수",index=c("점수","이름"))
total
treemap(total,vSize="점수",index=c("점수","이름"))
setwd("D:/workspace/R_Data_Analysis/Part4")
total<-read.csv("학생시험결과_전체점수.csv",header=T,sep=",")
total
treemap(total,vSize="점수",index=c("점수","이름"))
treemap
treemap(total,vSize="점수",index=c("조","이름"))
total
treemap(total,vSize="점수",index=c("조","이름"))
treemap(total,vSize="점수",index=c("점수","조","이름"))
install.packages("treemap")
install.packages("treemap")
library(treemap)
setwd("D:/workspace/R_Data_Analysis/Part4")
total<-read.csv("학생시험결과_전체점수.csv",header=T,sep=",")
total
treemap(total,vSize="점수",index=c("점수","이름"))
#Stars
setwd("D:/workspace/R_Data_Analysis/Part4")
total <- read.table("학생별전체성적_new.txt",header=T,sep=",")
total
row.names(total)<- total$이름
row.names(total)<- total$이름
total
total<-total[,2:7]
total
stars(total,flip.labels=FALSE,draw.segment=FALSE,frame.plot=TRUE,full=TRUE,main="학생별 과목별 성적분석-STAR Chart" )
lab<-names(total)
value<-table(lab)
value
pie(value,labels=lab,radius=0.1,cex=0.6,col=NA)
savePlot("star_2.png",type="png")
stars(total,flip.labels=FALSE,draw.segment=TRUE,frame.plot=TRUE,full=TRUE,main="학생별 과목별 성적분석-나이팅게일 챠트" )
stars(total,flip.labels=FALSE,draw.segment=TRUE,frame.plot=TRUE,full=FALSE,main="학생별 과목별 분석 다이어그램-반원챠트" )
install.packages("fmsb")
library(fmsb)
layout <- data.frame(
분석력=c(5,1),
창의력=c(15,3),
판단력=c(3,0),
리더쉽=c(5,1),
사교성=c(5,1))
set.seed(123)
data1 <- data.frame(
분석력=runif(3,1,5),
창의력=rnorm(3,10,2),
판단력=c(0.5,NA,3),
리더쉽=runif(3,1,5),
사교성=c(5,2.5,4))
data2 <- rbind(layout,data1)
data2 <- rbind(layout,data1)
op <- par(mar=c(1,0.5,3,1),mfrow=c(2,2))
radarchart(data2,axistype=1,seg=5,plty=1,title="첫번째 타입")
radarchart(data2,axistype=2,pcol=topo.colors(3),plty=1,title="두번째 타입")
radarchart(data2,axistype=3,pty=32,plty=1,axislabcol="grey",na.itp=FALSE,title="세번째 타입)")
radarchart(data2,axistype=0,plwd=1:5,pcol=1,title="네번째 타입")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
korean<-read.table("학생별국어성적_new.txt",header=T,sep=",")
korean
ggplot(korean,aes(x=이름,y=점수)+geom_point())
ggplot(korean,aes(x=이름,y=점수))+geom_point()
plot(1:15)
abline(h=8)
rect(1,6,3,8)
arrows(1,1,5,5)
text(8,9,"TEXT")
title("THIS IS TEST","SUB")
ggplot(korean,aes(x=이름,y=점수))+geom_point()
ggplot(korean,aes(x=이름,y=점수))geom_bar(stat="identity")
ggplot(korean,aes(x=이름,y=점수))+geom_bar(stat="identity")
iris
view(iris)
View(iris)
iris
iris
View(iris)
x<-iris
x
barplot(x)
x<-data.frame(sepal.legtth)
x<-sepal.legth
x<-iris
x
barplot(x)
showMlist(sepal.length,from iris)
data("iris")
table(iris$Sepal.Length)
x<-table(iris$Sepal.Length)
barplot(x,beside=T,names(c(sepal),col=("green"))
x
barplot(x,beside=T,names=c(sepal),col=("green"))
barplot(x,beside=T,names=c(sepal),col=c("green"))
barplot(x,beside=T,names=c(sepal.length),col=c("green"))
barplot(x,beside=T,names=c(Sepal.Length),col=c("green"))
barplot(x)
x
x<-table(iris$Sepal.Length)
barplot(x)
barplot(x),main="Sepal.Lenght"
barplot((x),main="Sepal.Lenght")
x
table(iris$Sepal.Width)
x2<-table(iris$Sepal.Width)
barplot((x),main="Sepal.Width")
x2
barplot((x),main="Sepal.Lenght")
x
barplot((x),main="Sepal.Width")
x2
table(iris$Sepal.Width)
x2<-table(iris$Sepal.Width)
barplot((x),main="Sepal.Width")
x2
y<-table(iris$Petal.Length)
barplot((y),main = "Petal.Length")
y
barplot((x),main="Sepal.Width")
x2
y<-table(iris$Petal.Length)
barplot((y),main = "Petal.Length")
y
y1<-table(iris$Petal.Width)
y2<-table(iris$Petal.Width)
barplot((y2),main="Petal.Width")
y2
x<-table(iris$Sepal.Length)
barplot((x),main="Sepal.Lenght")
x
table(iris$Sepal.Width)
x2<-table(iris$Sepal.Width)
barplot((x),main="Sepal.Width")
x2
plot(x=iris&Sepal.Length,y=iris$Petal.Length)
plot(x=X&Sepal.Length,y=Y$Petal.Length)
data("iris")
plot(x=data&Sepal.Length,y=data$Petal.Length)
plot(x=data$Sepal.Length,y=data$Petal.Length)
plot(x=iris$Sepal.Length,y=iris$Petal.Length)
plot(formula=Petal.Width~Sepal.Length, data="iris")
plot(x=iris$Sepal.Length,y=iris$Sepal.Width)
plot(x=iris$Sepal.Length,y=iris$Sepal.Width)
plot(x2=iris$Petal.Length,y2=iris$Petal.Width)
plot(x=iris$Sepal.Length,y=iris$Sepal.Width)
plot(x2=iris$Petal.Length,y2=iris$Petal.Width)
plot(x=iris$Petal.Length,y=iris$Petal.Width)
#2
data(iris)
tapply(data$iris,data$setosa,mean)
#2
iris
tapply(data$Species,data$Sepal.Lenght,mean)
iris %>%
filter(Species=setosa)
iris %>%
filter(Species=setosa)
iris %>%
filter(Species=c(setosa))
iris
city<-iris
city %>% filter(Species=c(setosa))
city %>% filter(Species=setosa)
filter(Species=setosa)
filter(Species=setosa)
#2
data(iris)
iris
tapply(iris$Sepal.Length,mean)
tapply(iris$Sepal.Length,iris$Speices,mean)
tapply(iris$Speices,iris$Sepal.Length,mean)
#2
data(iris)
iris
tapply(iris$Sepal.Length,iris$Species,mean)
barplot(mflow=c(3,2))
barplot(as.matrix(iris),main="Species")
#2
data(iris)
iris
tapply(iris$Sepal.Length,iris$Species,mean)
tapply(iris$Sepal.Length,iris$Species,mean)
barplot(iris,main"Average of Species")
barplot(iris,main="Average of Species")
average1<-tapply(iris$Sepal.Length,iris$Species,mean)
barplot(average1,main="Average of Species")
barplot(average1,main="Average of Species",ylab = "Sepal.Length")
tapply(iris$Sepal.Width,iris$Species,mean)
average2<-tapply(iris$Sepal.Width,iris$Species,mean)
barplot(average2,main="Average of Species",ylab = "Sepal.Width")
tapply(iris$Petal.Length,iris$Species,mean)
average3<-tapply(iris$Petal.Length,iris$Species,mean)
barplot(average3,main="Average of Species",ylab = "Petal.Length")
barplot(average1,main="Average of Species",ylab = "Sepal.Length")
barplot(average2,main="Average of Species",ylab = "Sepal.Width")
barplot(average3,main="Average of Species",ylab = "Petal.Length")
barplot(average1,main="Average of Species",ylab = "Sepal.Length")
barplot(average4,main="Average of Species",ylab = "Petal.Length")
barplot(average4,main="Average of Species",ylab = "Petal.Width")
tapply(iris$Petal.Width,iris$Species,mean)
average4<-tapply(iris$Petal.Width,iris$Species,mean)
barplot(average4,main="Average of Species",ylab = "Petal.Width")
data(iris)
data
view(iris)
iris
view(iris)
View(iris)
#3
data(iris)
barplot(as,matrix(iris),main="Exercise Three",beside = T, col = rainbow(nrow(iris),ylim=c(1,10)))
barplot(as,matrix(data),main="Exercise Three",beside = T, col = rainbow(nrow(data),ylim=c(1,10)))
#3
head(iris)
#3
data(iris)
summary(iris)
#3
str(iris)
#3
str=(iris)
boxplot(iris)
#3
str(iris)
ggplot(data=iris,aes(x=10,y=Species))+geom_boxplot()
ggplot(data=iris,aes(x=Species,y=1:10))+geom_boxplot()
ggplot(data=iris,aes(x=Species,y=10))+geom_boxplot()
ggplot(data=iris,aes(x=Species,y=Sepal.Length))+geom_boxplot()
ggplot(data=iris,aes(x=Species,y=(Sepal.Length,Sepal.Width,Petal.Length,Petal.Width))+geom_boxplot()
ggplot(data=iris,aes(x=Species,y=Sepal.Length)+geom_boxplot()
ggplot(data=iris,aes(x=Species,y=Sepal.Width)+geom_boxplot()
ggplot(data=iris,aes(x=Species,y=Sepal.Width)+geom_boxplot()
ggplot2(data=iris,aes(x=Species,y=Sepal.Width)+geom_boxplot()
#3
str(iris)
ggplot(data=iris,aes(x=Species,y=Sepal.Width)+geom_boxplot()
ggplot(data=iris,aes(x=Species,y=Sepal.Length)+geom_boxplot()
str(iris)
ggplot(data=iris,aes(x=Species,y=Petal.Length)+geom_boxplot()
ggplot(data=iris,aes(x=Species,y=Petal.Width)+geom_boxplot()
str(iris)
ggplot(data=iris,aes(x=Species,y=Petal.Width)+geom_boxplot()
ggplot(iris,aes(x=Species,y=Petal.Width)+geom_boxplot()
str(iris)
ggplot(data=iris,aes(x=Species,y=Petal.Width)+geom_boxplot()
str(iris)
str(iris)
ggplot(data=iris,aes(x=Species,y=Petal.Width)+geom_boxplot()
ggplot(data=iris,aes(x=Species,y=Petal.Length)+geom_boxplot()
str(iris)
ggplot(data=iris,aes(x=Species,y=Petal.Length)+geom_boxplot()
ggplot(data=iris,aes(x=Species,y=Sepal.Length))+geom_boxplot()
#3
str(iris)
ggplot(data=iris,aes(x=Species,y=Sepal.Length))+geom_boxplot()
ggplot(data=iris,aes(x=Species,y=Petal.Width))+geom_boxplot()
ggplot(data=iris,aes(x=Species,y=Sepal.Width))+geom_boxplot()
ggplot(data=iris,aes(x=Species,y=Petal.Length))+geom_boxplot()
ggplot(data=iris,aes(x=Species,y=Petal.Width))+geom_boxplot()
